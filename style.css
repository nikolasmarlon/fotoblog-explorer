*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;

    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

:root{
    font-size: 62.5%;

    --white: #fff;
    --gray-100: #f5f5f5;
    --gray-300: #8d8d99;
    --gray-500: #3d3d3d;
    --gray-900: #202024;


    
}

html, body, input{
    font-family: 'Mulish', sans-serif;
}

body{
    font-size: 1.6rem;
    background-color: var(--white);
    color: var(--gray-900);
}



#app {
    display: grid;
    grid-template-rows: max-content 1fr max-content;

    height: 100vh;
}

.container {
    padding: 1.6rem 3.2rem;
    width: min(112rem, 100%);
    margin: 0 auto;
}

main{
    background-color: rgb(221, 221, 250);
    overflow-y: scroll;
    background-color: var(--gray-100);
}




header, nav, nav ul{
    display: flex;
    align-items: center;
    gap: 7.2rem;
    font-weight: 700;
}


header form {
    flex: 1;
}

nav ul {
    list-style: none;
    font-size: 1.8rem;
    color: var(--gray-300);
}

ul li.active {
    color: var(--gray-900);
}


/* Para esconder a label */
.input-container label{
    width: 1px;
    height: 1px;
    overflow: hidden;
    position: absolute;
}

.input-container input{
    width: 100%;
    padding: 1.6rem;
    background-color: var(--gray-100);
    border: 0;
    border-radius: .6rem;


    font-size: 1.6rem;
    font-weight: 600;
    opacity: 0.56;
}

.input-container input::placeholder{
    color: var(--gray-500);
}

.avatar {
    width: 4.2rem;
    height: 4.2rem;

    object-fit: cover;

    border-radius: 50%;
}


/* Galeria */
main h1{
    font-size: 2.4rem;
    padding-top: 1.6rem;

}


.galeria {
    margin-top: 3.2rem;

    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 2.2rem;
}

.item {
    background-color: var(--white);
    border-radius: .8rem;
    

    display: flex;
    flex-direction: column;

    /*Imagem e o conteúdo dentro do item estão transbordando, por isso usamos o overflow: hidden*/
    overflow: hidden;
}

.item img {
    width: 100%;

    /*Proporção da imagem*/
    aspect-ratio: 16/9;
    /*Imagem ajustada*/
    object-fit: cover;

    transition: .3s;   
}

.item img:hover{
    filter: hue-rotate(10deg) contrast(101%) saturate(200%);
    transform: scale(1.1) rotate(-2deg);
}

.detalhes {
    padding: 2.2rem;
    background-color: var(--white);
    z-index: 1;
    
    position: relative;

    
}

.detalhes h2{
    font-size: 1.8rem;
}

.tags{
    margin-top: 1.2rem;
}

.tags span{
    padding: .6rem;
    background-color: var(--gray-100);
    border-radius: .4rem;
    line-height: 0;
    font-size: 1.2rem;
    text-transform: uppercase;
}


/*Criando animação

1ª maneira
Obs: para fazer a animação ir e voltar: podemos atribuir 50% no final
@keyframes rotate-center{0%{transform:rotate(0)}50%{transform:rotate(360deg)}}


2ª maneiria

adicionar animation-direction: alternate;
adicionar animation-iteraction-count: 2;

assim como existe mais de uma animação, a segunda pega a propriedade alternate, fazendo com que a animação volte para a posição inicial.

*/
@keyframes rotate-center{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}


/*Chamando a animação: chanando pelo nome, adicionando um tempo*/
.rotate-center{animation:rotate-center .9s ease-in-out both alternate infinite}






footer p{
    text-align: center;
    padding: 1.6rem;
    font-weight: 600;
}